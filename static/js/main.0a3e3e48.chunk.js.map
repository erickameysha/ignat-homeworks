{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routess.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Error404","Message","props","className","s","wrapper","img","src","avatar","alt","egle","width","height","viewBox","fill","xmlns","d","content","name","message","time","messageData","HW1","PreJunior","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","m","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onClickEnter","inputClass","value","onChange","onKeyPress","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","setEvent","currentTarget","trim","console","log","key","HW3","setUsers","user","v1","Junior","SuperInputText","type","onChangeText","onEnter","restProps","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PATH","Routess","path","element","to","JuniorPlus","Header","HW5","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","i","SuperRadio","onChangeCallback","o","arr","HW7","homeWorkReducer","action","endSTATE","sort","b","payload","reverse","el","age","initialPeople","HW8","people","setPeople","finalPeople","p","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3e3e48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__1JEwj\",\"img\":\"Message_img__DT5Lq\",\"content\":\"Message_content__1vT6S\",\"name\":\"Message_name__15tmJ\",\"message\":\"Message_message__3FG_E\",\"time\":\"Message_time__3Bg2d\",\"egle\":\"Message_egle__14sqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2FvLo\",\"errorInput\":\"SuperInputText_errorInput__8KEZe\",\"error\":\"SuperInputText_error__ms9eA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__18ctL\",\"column\":\"HW4_column__1JtV7\",\"testSpanError\":\"HW4_testSpanError__3O3IX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3yUaz\",\"red\":\"SuperButton_red__kPfGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2jHKE\",\"spanClassName\":\"SuperCheckbox_spanClassName__3upUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__31iel\",\"error\":\"Greeting_error__3aj83\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport './engle.svg'\r\nimport HW1 from '../h1/HW1'\r\ntype messageDataProps={\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\nfunction Message(props: messageDataProps) {\r\n    return (\r\n        <div>\r\n         <div className={s.wrapper}>\r\n             <img className={s.img} src={props.avatar} alt=\"\"/>\r\n             <div className={s.egle}>\r\n                 <svg width=\"24\" height=\"19\" viewBox=\"0 0 24 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                     <path d=\"M0.153427 18.6688L23.474 0.982594L23.4055 18.9652L0.153427 18.6688Z\" fill=\"#871010\"/>\r\n                 </svg>\r\n             </div>\r\n             <div className={s.content}>\r\n\r\n                 <div className={s.name}>{props.name}</div>\r\n                 <div className={s.message}>{props.message}</div>\r\n                 <div className={s.time}>{props.time}</div>\r\n             </div>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'glrrlrrllrlrlrrl',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n             <li><span>{props.affair.name}</span>  <span >[{props.affair.priority}]</span> <button onClick={deleteCallback}>X</button> </li>\n\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    return (\n        <div>\n <ul className={'affair'}>\n            {mappedAffairs}\n </ul>\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType [] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else return  affairs.filter(m => m.priority == filter)// need to fix\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return  affairs.filter(m => m._id != _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter ={ filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent,} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onClickEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onClickEnter} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : '' // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    onKeyPress={onClickEnter}\r\n                    className={inputClass}\r\n                />\r\n                <button disabled={!!error} onClick={addUser}>add</button>\r\n\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n            <span>{error}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void  // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('обязательное поле') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        let setEvent = e.currentTarget.value.trim()\r\n        //console.log('setEvent: ',setEvent)\r\n        if (setEvent){\r\n\r\n            setName(setEvent)\r\n            error && setError('')\r\n        } else {\r\n\r\n            name && setName('')\r\n            setError('обязательное поле')\r\n        }\r\n\r\n        console.log(error)\r\n\r\n    }\r\n    const addUser = () => {\r\n        \r\n        addUserCallback(name)\r\n        alert(`Hello  ${name} !`)\r\n\r\n        setName('')\r\n        setError('обязательное поле')\r\n\r\n    }\r\n    const onClickEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if(e.key ==='Enter'){\r\n       addUser()\r\n      }\r\n    }\r\n\r\n    let totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            onClickEnter={onClickEnter}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    let [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user = {\r\n          _id: v1(),\r\n          name,\r\n        }\r\n        setUsers([ ...users, user] )// need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from 'react';\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <HW1 />\r\n            <HW2 />\r\n            <HW3 />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = error ? s.error : ''\r\n    const finalInputClassName = error ? s.errorInput : s.superInput // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = red ? s.red : s.default\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react';\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW5 from \"../HW5\";\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <HW1 />\r\n            <HW2 />\r\n            <HW3 />\r\n            <HW4 />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","\r\nimport React from 'react'\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\n// import {Redirect, Route, Switch} from \"react-router\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport {Navigate, Routes, Route} from \"react-router-dom\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n\r\n}\r\n\r\n\r\nfunction Routess() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Routes>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                    <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route  path={'/*'} element={ <Error404 />}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routess\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from \"./Routess\";\r\n\r\nimport './HW5.css'\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <div className={'dropdown'}>\r\n                <button className={'mainmenubtn'}>Главное меню</button>\r\n                <div className={'dropdownChild'}>\r\n                  <a> <NavLink to={PATH.PRE_JUNIOR} >Pre-Junior</NavLink></a>\r\n                   <a>  <NavLink to={PATH.JUNIOR} >Junior</NavLink></a>\r\n                    <a >  <NavLink  to={PATH.JUNIOR_PLUS} >Junior+++</NavLink></a>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routess from './Routess'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n            <Routess/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n    setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n          setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                <span\r\n\r\n\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                    ✎  {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n\r\n        setValue(restoreState<string>('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((e, i)=> (\r\n        <option key={e +' -' + i} value={e}>{e}</option>\r\n    )) : [] ; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                checked={ o === value}\r\n                value = {o}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from \"../HW8\";\r\n\r\nexport const homeWorkReducer = (state: UserType[], action: ActionType): UserType[] => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            let endSTATE = [...state].sort((a, b)=> {\r\n                if (a.name >= b.name) return 1\r\n                else if (a.name < b.name) return -1\r\n                else return 0\r\n            } )\r\n      return action.payload === 'up' ? endSTATE : endSTATE.reverse()\r\n        }\r\n        case 'check': {\r\n            // need to fix\r\n            return [...state].filter(el=> el.age >= action.payload)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionType = { type: 'sort', payload: 'up' |'down'} | { type: 'check', payload: number}\r\n\r\n","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nexport type UserType ={\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nconst initialPeople: UserType[] = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<UserType[]>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: UserType) => (\r\n        <div key={p._id}>\r\n            <span>{p._id}</span>   <span>{p.name}</span>  <span>{p.age}</span>\r\n        </div>\r\n\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div><SuperButton onClick={check}>C</SuperButton></div>\r\n            check 18\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HW1 from \"./p2-homeworks/h1/HW1\";\nimport HW2 from \"./p2-homeworks/h2/HW2\";\nimport HW3 from \"./p2-homeworks/h3/HW3\";\nimport HW4 from \"./p2-homeworks/h4/HW4\";\nimport HW5 from \"./p2-homeworks/h5/HW5\";\nimport HW6 from \"./p2-homeworks/h6/HW6\";\nimport HW7 from \"./p2-homeworks/h7/HW7\";\nimport HW8 from \"./p2-homeworks/h8/HW8\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            {/*<HW1/>*/}\n            {/*  <HW2 />*/}\n            {/*  <HW3 />*/}\n            {/*<HW4 />*/}\n            <HW5/>\n            <HW6 />\n            <HW7 />\n            <HW8 />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}